diff --exclude='*.xml' --exclude='*.o.d' --exclude=.project --exclude=.cproject -Naur spandsp-base-fs/src/spandsp/t30.h spandsp-fs/src/spandsp/t30.h
--- spandsp-base-fs/src/spandsp/t30.h	2014-05-29 13:37:33.000000000 +0100
+++ spandsp-fs/src/spandsp/t30.h	2015-07-24 11:58:31.319673569 +0100
@@ -143,7 +143,9 @@
 /*! The maximum length of the body of an ident string */
 #define T30_MAX_IDENT_LEN           20
 /*! The maximum length of the user string to insert in page headers */
-#define T30_MAX_PAGE_HEADER_INFO    50
+#define T30_MAX_PAGE_HEADER_INFO    132
+/*! The maximum length of the user string to insert in a small page headers */
+#define T30_MAX_SMALL_PAGE_HEADER_INFO    50
 
 typedef struct t30_state_s t30_state_t;
 
diff --exclude='*.xml' --exclude='*.o.d' --exclude=.project --exclude=.cproject -Naur spandsp-base-fs/src/t4_tx.c spandsp-fs/src/t4_tx.c
--- spandsp-base-fs/src/t4_tx.c	2014-05-29 13:37:33.000000000 +0100
+++ spandsp-fs/src/t4_tx.c	2015-07-24 12:00:02.092423551 +0100
@@ -67,6 +67,7 @@
 #include "spandsp/t43.h"
 #include "spandsp/t4_t6_decode.h"
 #include "spandsp/t4_t6_encode.h"
+#include "spandsp/t30.h"
 
 #include "spandsp/private/logging.h"
 #include "spandsp/private/t81_t82_arith_coding.h"
@@ -1425,6 +1426,49 @@
 }
 /*- End of function --------------------------------------------------------*/
 
+static char *replace_str(char *str, const char *sub, char *rep)
+{
+    char buffer[T30_MAX_PAGE_HEADER_INFO + 1];
+    char *p;
+
+    if(! (p = strstr(str, sub)))  // icheck if 'sub' is in 'str'
+    {
+        return str;
+    }
+
+    strncpy(buffer, str, p - str); // copy chars
+    buffer[p - str] = '\0';
+
+    snprintf(buffer + (p - str),T30_MAX_PAGE_HEADER_INFO,"%s%s", rep, p + strlen(sub));
+    strncpy(str, buffer, T30_MAX_PAGE_HEADER_INFO);
+    str[T30_MAX_PAGE_HEADER_INFO] = '\0';
+    return str;
+}
+
+static int make_header_full(t4_tx_state_t *s)
+{
+    const char *sub_page = "%P";
+    const char *sub_far_ident = "%R";
+    char tmp[20];
+
+    if (s->header_text == NULL)
+    {
+        if ((s->header_text = span_alloc(T30_MAX_PAGE_HEADER_INFO + 1)) == NULL)
+            return -1;
+    }
+
+    snprintf(s->header_text, T30_MAX_PAGE_HEADER_INFO, "%s", s->header_info);
+
+    snprintf(tmp,sizeof(tmp),"%d",s->current_page+1);
+    s->header_text = replace_str(s->header_text,sub_page,tmp);
+
+    snprintf(tmp,sizeof(tmp),"%s",(s->local_ident)  ?  s->local_ident  :  "");
+    s->header_text = replace_str(s->header_text,sub_far_ident,tmp);
+
+    return 0;
+}
+/*- End of function --------------------------------------------------------*/
+
 static int make_header(t4_tx_state_t *s)
 {
     time_t now;
@@ -2439,6 +2483,8 @@
 
 SPAN_DECLARE(int) t4_tx_start_page(t4_tx_state_t *s)
 {
+    int result = 0;
+
     span_log(&s->logging, SPAN_LOG_FLOW, "Start tx page %d - compression %s\n", s->current_page, t4_compression_to_str(s->metadata.compression));
     if (s->current_page > s->stop_page)
         return -1;
@@ -2494,9 +2540,15 @@
         break;
     }
 
+    if (strlen(s->header_info) < T30_MAX_SMALL_PAGE_HEADER_INFO)
+        result = make_header(s);
+    else
+        result = make_header_full(s);
+
+
     /* If there is a page header, create that first */
     //if (s->metadata.image_type == T4_IMAGE_TYPE_BILEVEL  &&  s->header_info  &&  s->header_info[0]  &&  make_header(s) == 0)
-    if (s->header_info  &&  s->header_info[0]  &&  make_header(s) == 0)
+    if (s->header_info  &&  s->header_info[0]  &&  result == 0)
     {
         s->header_row = 0;
         set_row_read_handler(s, header_row_read_handler, (void *) s);
